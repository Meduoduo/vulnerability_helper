from exploitdb import ExploitDB
from argparse import ArgumentParser
import csv

parser = ArgumentParser()
parser.add_argument('--mode', type=str, default='download', help='download exploitdb into local', choices=['download', 'insert', 'qa_export'])
parser.add_argument('--batch_size', type=int, default=10, help='batch size for export')

if __name__ == "__main__":
    args = parser.parse_args()
    if args.mode == 'download':
        ExploitDB().load()
    elif args.mode == 'insert':
        for vulnerability in ExploitDB().new():
            vulnerability.save()
    elif args.mode == 'qa_export':
        if not args.batch_size:
            args.batch_size = 100000000000

        batch_size = args.batch_size

        for i, vulnerability in enumerate(ExploitDB().new()):
            if i % batch_size == 0:
                result = csv.writer(open(f'export_{i // batch_size}.csv', 'w'))
                result.writerow(['question', 'answer'])

            result.writerow([
                str(vulnerability.codes) + '\n\n' + 
                vulnerability.description + '\n\n',
                vulnerability.exp
            ])